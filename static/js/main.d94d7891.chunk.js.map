{"version":3,"sources":["Service/api.js","Controller/update.jsx","Functions/color.js","Functions/data_formater.js","Components/grafic_country_page.jsx","Controller/router.jsx","Functions/backbutton.js","view/country_page.jsx","Functions/create_list.js","Components/country-list.jsx","Components/map.jsx","Components/grafic.jsx","Controller/maincontroller.jsx","view/error.jsx","index.js"],"names":["url","a","fetch","then","result","json","error","Error","update","select","ReactDOM","render","View","document","getElementById","chooseColor","type","dataFormater","cases","toString","Grafic","props","useState","dataToShow","setDataToShow","dataToDisplay","setDataToDisplay","countryUrl","setCountryURL","useEffect","country","setUseState","dataToShowFilter","dataPerCase","Object","entries","map","dataReady","keys","date","name","Date","toLocaleDateString","month","day","deaths","recovered","className","data","margin","top","right","left","bottom","dataKey","tickFormatter","stroke","Color","fill","activeDot","r","BackButton","link","useHistory","onClick","push","countryPage","to","ViewCountry","src","countryInfo","flag","alt","todayCases","todayDeaths","tests","casesPerOneMillion","deathsPerOneMillion","testsPerOneMillion","CreateList","countries","order","sort","country1","country2","list","key","event","preventDefault","handleClick","reverse","CountryList","countryList","setCountryList","newColor","setNewColor","setOrder","search","setSearch","color","values","join","length","Array","from","searchCountry","style","placeholder","value","onChange","target","set","newList","filter","toUpperCase","includes","MapView","setCountries","Map","id","center","zoom","minZoom","maxZoom","maxBounds","TileLayer","Circle","lat","long","radius","dataHistorical","MainController","globalData","countriesData","historicalData","href","NoPage","backgroundColor","setGlobalData","setCountriesData","setHistoricalData","setType","exact","path","component","noPage","Data","catch"],"mappings":"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","file":"static/js/main.d94d7891.chunk.js","sourcesContent":["export default async function Data(url) {\r\n  return await fetch(url).then(\r\n    (result) => {\r\n      return result.json();\r\n    },\r\n    (error) => {\r\n      throw new Error(error);\r\n    },\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport View from \"./router\";\r\n\r\nexport default function update(select) {\r\n  ReactDOM.render(<View select={select} />, document.getElementById(\"root\"));\r\n}\r\n","export default function chooseColor(type) {\r\n  if (type === \"cases\") {\r\n    return \"blue\";\r\n  } else if (type === \"deaths\") {\r\n    return \"red\";\r\n  } else {\r\n    return \"green\";\r\n  }\r\n}\r\n","export const dataFormater = (cases) => {\r\n  if (cases > 8000000) {\r\n    return (cases / 1000000).toString() + \" M\";\r\n  } else if (cases > 1000) {\r\n    return (cases / 1000).toString() + \" K\";\r\n  } else {\r\n    return cases.toString();\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { countryInformation } from \"../Controller/router\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport Color from \"../Functions/color\";\r\nimport { dataFormater } from \"../Functions/data_formater\";\r\n\r\nexport default function Grafic(props) {\r\n  let [dataToShow, setDataToShow] = useState({});\r\n  let [dataToDisplay, setDataToDisplay] = useState([]);\r\n  const [countryUrl, setCountryURL] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (!(\"country\" in dataToShow) && !(\"message\" in dataToShow)) {\r\n      setCountryURL(\r\n        \"https://disease.sh/v3/covid-19/historical/\" +\r\n        props.country +\r\n        \"?lastdays=30\",\r\n      );\r\n      countryInformation(countryUrl, setDataToShow);\r\n    }\r\n    if (\"timeline\" in dataToShow) {\r\n      setCountryURL(\" \");\r\n      const dataToShowFilter = dataToShow[\"timeline\"];\r\n      const dataCases = Object.entries(dataToShowFilter);\r\n      const dataPerCase = dataCases.map((cases) => {\r\n        return cases[1];\r\n      });\r\n      const dataReady = Object.keys(dataPerCase[0]).map((date) => {\r\n        const options = { month: \"long\", day: \"numeric\" };\r\n        return {\r\n          name: new Date(date).toLocaleDateString(\"en-US\", options),\r\n          cases: dataPerCase[0][date],\r\n          deaths: dataPerCase[1][date],\r\n          recovered: dataPerCase[2][date],\r\n        };\r\n      });\r\n      setDataToDisplay(dataReady);\r\n    }\r\n  }, [props, dataToShow, countryUrl]);\r\n\r\n  return (\r\n    <ResponsiveContainer className=\"graficviewcountry\">\r\n      <LineChart\r\n        data={dataToDisplay}\r\n        margin={{\r\n          top: 10,\r\n          right: 30,\r\n          left: 10,\r\n          bottom: 0,\r\n        }}\r\n      >\r\n        <XAxis dataKey=\"name\" />\r\n        <YAxis tickFormatter={dataFormater} />\r\n        <Tooltip />\r\n        <Legend />\r\n        <Line\r\n          type=\"monotone\"\r\n          dataKey=\"cases\"\r\n          stroke={Color(\"cases\")}\r\n          fill={Color(\"cases\")}\r\n          activeDot={{ r: 8 }}\r\n        />\r\n        <Line\r\n          type=\"monotone\"\r\n          dataKey=\"deaths\"\r\n          stroke={Color(\"deaths\")}\r\n          fill={Color(\"deaths\")}\r\n          activeDot={{ r: 8 }}\r\n        />\r\n        <Line\r\n          type=\"monotone\"\r\n          dataKey=\"recovered\"\r\n          stroke={Color(\"recovered\")}\r\n          fill={Color(\"recovered\")}\r\n          activeDot={{ r: 8 }}\r\n        />\r\n      </LineChart>\r\n    </ResponsiveContainer>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Data from \"../Service/api\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport MainController from \"./maincontroller\";\r\nimport CountryPage from \"../view/country_page\";\r\nimport NoPage from \"../view/error\";\r\n\r\nconst urlAllInfo = \"https://disease.sh/v3/covid-19/all\";\r\nconst urlCountrysAllInfo = \"https://disease.sh/v3/covid-19/countries\";\r\nconst urlHistoricalData =\r\n  \"https://disease.sh/v3/covid-19/historical/all?lastdays=30\";\r\n\r\nexport default function View(select) {\r\n  const [globalData, setGlobalData] = useState(\"\");\r\n  const [countriesData, setCountriesData] = useState(\"\");\r\n  const [historicalData, setHistoricalData] = useState(\"\");\r\n  let [type, setType] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (globalData.length === 0) {\r\n      setUseState(urlAllInfo, setGlobalData);\r\n      setUseState(urlCountrysAllInfo, setCountriesData);\r\n      setUseState(urlHistoricalData, setHistoricalData);\r\n    }\r\n    setType(Object.values(select));\r\n  }, [select, globalData]);\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"router\">\r\n        <Switch>\r\n          <Route exact path=\"/Covid19website/\">\r\n            <MainController\r\n              globalData={globalData}\r\n              countriesData={countriesData}\r\n              type={type}\r\n              historicalData={historicalData}\r\n            />\r\n          </Route>\r\n          <Route path=\"/Portugal\">\r\n            <CountryPage />\r\n          </Route>\r\n          <Route component={noPage} />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nfunction setUseState(url, set) {\r\n  Data(url)\r\n    .then((result) => {\r\n      set(result);\r\n    })\r\n    .catch((error) => {\r\n      set(error);\r\n    });\r\n}\r\n\r\nexport function countryInformation(url, set) {\r\n  setUseState(url, set);\r\n}\r\n\r\nconst noPage = () => {\r\n  return (\r\n    <div>\r\n      <NoPage />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport update from \"../Controller/update\";\r\n\r\nexport default function BackButton() {\r\n  const link = useHistory();\r\n  return (\r\n    <button\r\n      className=\"rainbow rainbow-1\"\r\n      onClick={() => {\r\n          link.push(\"/Covid19website/\");\r\n          update(\"deaths\");\r\n      }}\r\n    >\r\n      Go back\r\n    </button>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter as Router, Redirect } from \"react-router-dom\";\r\nimport Graphic from \"../Components/grafic_country_page\";\r\nimport BackButton from \"../Functions/backbutton\";\r\nimport \"../Css/country_page.css\";\r\n\r\nexport default function countryPage(country) {\r\n  ReactDOM.render(\r\n    <Router>\r\n      <Redirect to={country.country} />\r\n      <ViewCountry country={country} />\r\n    </Router>,\r\n    document.getElementById(\"root\"),\r\n  );\r\n}\r\n\r\nfunction ViewCountry(props) {\r\n  const country = props.country;\r\n  const date = new Date().toLocaleDateString();\r\n\r\n  return (\r\n    <div className=\"countrypage\">\r\n      <div className=\"nameandflag\">\r\n        <h1>{country.country}</h1>\r\n        <img\r\n          src={country.countryInfo.flag}\r\n          className=\"countryflagpage\"\r\n          alt=\"countryflagpage\"\r\n        />\r\n      </div>\r\n      <div className=\"totals\">\r\n        <h2>{date}</h2>\r\n        <p>Cases: {country.todayCases}</p>\r\n        <p>Deaths: {country.todayDeaths}</p>\r\n        <p>Tests: {country.tests}</p>\r\n      </div>\r\n      <div className=\"million\">\r\n        <h3>Per 1 Million</h3>\r\n        <p>Cases: {country.casesPerOneMillion}</p>\r\n        <p>Deaths: {country.deathsPerOneMillion}</p>\r\n        <p>Tests: {country.testsPerOneMillion}</p>\r\n      </div>\r\n      <div className=\"grafic\">\r\n        <Graphic country={country.country} />\r\n      </div>\r\n      <p>Note: The data above concerns only the past 30 days</p>\r\n      <div className=\"backbutton\">\r\n        <BackButton />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport update from \"../Controller/update\";\r\nimport countryPage from \"../view/country_page\";\r\n\r\nexport default function CreateList(countries, type, order) {\r\n  update(type);\r\n  countries.sort((country1, country2) => {\r\n    return country2[type] - country1[type];\r\n  });\r\n  let list = countries.map((country) => {\r\n    return (\r\n      <div\r\n        className=\"countrydiv\"\r\n        key={country.country}\r\n        onClick={(event) => {\r\n          event.preventDefault();\r\n          handleClick(country);\r\n        }}\r\n      >\r\n        {country[type]} in {country.country}{\" \"}\r\n        <img\r\n          src={country.countryInfo.flag}\r\n          className=\"countryflag\"\r\n          alt=\"countryflag\"\r\n        />\r\n      </div>\r\n    );\r\n  });\r\n  return order ? list : list.reverse();\r\n}\r\n\r\nfunction handleClick(country) {\r\n  countryPage(country);\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\r\nimport CreateList from \"../Functions/create_list\";\r\nimport Color from \"../Functions/color\";\r\nimport { TiArrowSortedUp, TiArrowSortedDown } from \"react-icons/ti\";\r\nimport \"react-tabs/style/react-tabs.css\";\r\nimport \"../Css/country-list.css\";\r\n\r\nexport default function CountryList(props) {\r\n  let [countryList, setCountryList] = useState([]);\r\n  let [newColor, setNewColor] = useState({});\r\n  let [order, setOrder] = useState(true);\r\n  let [search, setSearch] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setNewColor({\r\n      color: Color(Object.values(props.type).join(\"\")),\r\n    });\r\n  }, [props.type]);\r\n\r\n  useEffect(() => {\r\n    if (countryList.length === 0) {\r\n      setCountryList(\r\n        CreateList(Array.from(props.countries), props.type, order),\r\n      );\r\n    }\r\n  }, [props, order, countryList]);\r\n\r\n  return (\r\n    <div className=\"separators\">\r\n      <Tabs key=\"tabs\">\r\n        <TabList key=\"tablist\" className=\"tablist\">\r\n          <Tab\r\n            key=\"cases\"\r\n            onClick={() => {\r\n              searchCountry(\r\n                CreateList(props.countries, \"cases\", order),\r\n                setCountryList,\r\n                search,\r\n              );\r\n            }}\r\n          >\r\n            CASES\r\n          </Tab>\r\n          <Tab\r\n            key=\"deaths\"\r\n            onClick={() => {\r\n              searchCountry(\r\n                CreateList(props.countries, \"deaths\", order),\r\n                setCountryList,\r\n                search,\r\n              );\r\n            }}\r\n          >\r\n            DEATHS\r\n          </Tab>\r\n          <Tab\r\n            key=\"recovered\"\r\n            onClick={() => {\r\n              searchCountry(\r\n                CreateList(props.countries, \"recovered\", order),\r\n                setCountryList,\r\n                search,\r\n              );\r\n            }}\r\n          >\r\n            RECOVERED\r\n          </Tab>\r\n        </TabList>\r\n        <TabPanel style={newColor} key=\"casesview\" className=\"tab\">\r\n          <h2>Total Cases: {props.cases}</h2>\r\n        </TabPanel>\r\n        <TabPanel style={newColor} key=\"deathsview\" className=\"tab\">\r\n          <h2>Total Deaths: {props.deaths}</h2>\r\n        </TabPanel>\r\n        <TabPanel style={newColor} key=\"recoveredview\" className=\"tab\">\r\n          <h2>Total Recovered: {props.recovered}</h2>\r\n        </TabPanel>\r\n      </Tabs>\r\n      <button\r\n        className=\"arrowbutton\"\r\n        onClick={() => {\r\n          setOrder(!order);\r\n          if (countryList === \" \") {\r\n            return \" \";\r\n          } else {\r\n            setCountryList(countryList.reverse());\r\n          }\r\n        }}\r\n      >\r\n        {order ? (\r\n          <TiArrowSortedUp className=\"arrow\" />\r\n        ) : (\r\n          <TiArrowSortedDown className=\"arrow\" />\r\n        )}\r\n      </button>\r\n      <input\r\n        className=\"search\"\r\n        type=\"text\"\r\n        placeholder=\"search... \"\r\n        value={search}\r\n        onChange={(event) => {\r\n          searchCountry(\r\n            CreateList(props.countries, props.type, order),\r\n            setCountryList,\r\n            event.target.value,\r\n          );\r\n          setSearch(event.target.value);\r\n        }}\r\n      />\r\n      <div className=\"countrylist\">{countryList}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction searchCountry(list, set, search) {\r\n  if (search.length === 0) {\r\n    set(list);\r\n  } else {\r\n    let newList = list.filter((value) => {\r\n      return value.key.toUpperCase().includes(search.toUpperCase())\r\n        ? value\r\n        : false;\r\n    });\r\n    if (newList.length > 0) {\r\n      set(newList);\r\n    } else {\r\n      set(\" \");\r\n    }\r\n  }\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Map, TileLayer, Circle } from \"react-leaflet\";\r\nimport Color from \"../Functions/color\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport \"../Css/map.css\";\r\n\r\nexport default function MapView(props) {\r\n  let [countries, setCountries] = useState(\"\");\r\n  let [newColor, setNewColor] = useState(\"\");\r\n  const maxBounds = [\r\n    [-89.98155760646617, -180],\r\n    [89.99346179538875, 180],\r\n  ];\r\n  const center = [38.7071, -9.13549];\r\n\r\n  useEffect(() => {\r\n    setCountries(props.countries);\r\n    setNewColor(Color(Object.values(props.type).join(\"\")));\r\n  }, [props]);\r\n\r\n  return (\r\n    <div>\r\n      <Map\r\n        id=\"mapview\"\r\n        className=\"mapview\"\r\n        center={center}\r\n        zoom={2}\r\n        minZoom={2}\r\n        maxZoom={10}\r\n        maxBounds={maxBounds}\r\n      >\r\n        <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n        {Array.from(countries).map((country) => {\r\n          return (\r\n            <Circle\r\n              key={country.country}\r\n              center={[country.countryInfo.lat, country.countryInfo.long]}\r\n              color={newColor}\r\n              radius={country[props.type]}\r\n            />\r\n          );\r\n        })}\r\n      </Map>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  AreaChart,\r\n  Area,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport Color from \"../Functions/color\";\r\nimport { dataFormater } from \"../Functions/data_formater\";\r\n\r\nexport default function Grafic(props) {\r\n  let [dataToShow, setDataToShow] = useState([]);\r\n  let [dataToDisplay, setDataToDisplay] = useState([]);\r\n  let [newColor, setNewColor] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setDataToShow(props.dataHistorical[props.type]);\r\n    if (dataToShow) {\r\n      setDataToDisplay(\r\n        Object.keys(dataToShow).map((key) => {\r\n          const options = { month: \"long\", day: \"numeric\" };\r\n          return {\r\n            name: new Date(key).toLocaleDateString(\"en-US\", options),\r\n            cases: dataToShow[key],\r\n          };\r\n        }),\r\n      );\r\n    }\r\n    setNewColor(Color(Object.values(props.type).join(\"\")));\r\n  }, [props, dataToShow]);\r\n\r\n  return (\r\n    <ResponsiveContainer className=\"grafic\">\r\n      <AreaChart\r\n        data={dataToDisplay}\r\n        margin={{\r\n          top: 10,\r\n          right: 30,\r\n          left: 10,\r\n          bottom: 0,\r\n        }}\r\n      >\r\n        <XAxis dataKey=\"name\" />\r\n        <YAxis tickFormatter={dataFormater} />\r\n        <Tooltip />\r\n        <Area\r\n          type=\"monotone\"\r\n          dataKey=\"cases\"\r\n          stroke={newColor}\r\n          fill={newColor}\r\n        />\r\n      </AreaChart>\r\n    </ResponsiveContainer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport CountryList from \"../Components/country-list\";\r\nimport MapView from \"../Components/map\";\r\nimport Grafic from \"../Components/grafic\";\r\nimport \"../Css/maincontroller.css\";\r\n\r\nexport default function MainController(props) {\r\n  return (\r\n    <div className=\"mainbody\" key=\"mainbody\">\r\n      <div className=\"view\" key=\"view\">\r\n        <CountryList\r\n          key=\"countrylist\"\r\n          cases={props.globalData.cases}\r\n          deaths={props.globalData.deaths}\r\n          recovered={props.globalData.recovered}\r\n          countries={props.countriesData}\r\n          type={props.type}\r\n        />\r\n      </div>\r\n      <div className=\"data\">\r\n        <div className=\"mapview\" key=\"mapview\">\r\n          <MapView\r\n            key=\"mapview\"\r\n            countries={props.countriesData}\r\n            type={props.type}\r\n          />\r\n        </div>\r\n        <div className=\"graficview\" key=\"graficview\">\r\n          <Grafic dataHistorical={props.historicalData} type={props.type} />\r\n        </div>\r\n        <p className=\"repository\">\r\n          Create 2020 - Repository{\" \"}\r\n          <a href=\"https://github.com/Drete457/Covid19website\">Here</a>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"../Css/error.css\";\r\n\r\nexport default function NoPage() {\r\n  const link = useHistory();\r\n  return (\r\n    <div className=\"nopage\">\r\n      <div className=\"sep\"></div>\r\n      <h1>Page Not Found</h1>\r\n      <h1>Error 404</h1>\r\n      <button\r\n        className=\"returnbutton\"\r\n        style={{ backgroundColor: \"#9a4ef1\" }}\r\n        onClick={() => link.push(\"/Covid19website/\")}\r\n      >\r\n        Return Home\r\n      </button>\r\n      <div className=\"container\">\r\n        <div className=\"loader loader1\"></div>\r\n        <div className=\"loader loader2\"></div>\r\n        <div className=\"loader loader3\"></div>\r\n        <div className=\"loader loader4\"></div>\r\n        <div className=\"loader loader5\"></div>\r\n        <div className=\"loader loader6\"></div>\r\n        <div className=\"loader loader7\"></div>\r\n        <div className=\"loader loader8\"></div>\r\n        <div className=\"loader loader9\"></div>\r\n        <div className=\"loader loader10\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport View from \"./Controller/router\";\r\nimport \"./Css/index.css\";\r\n\r\nReactDOM.render(<View select=\"cases\" />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}