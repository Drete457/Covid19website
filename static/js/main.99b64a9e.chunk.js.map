{"version":3,"sources":["Service/api.js","Controller/update.jsx","Functions/color.js","Functions/data_formater.js","Components/grafic_country_page.jsx","Controller/router.jsx","Functions/backbutton.js","view/country_page.jsx","Functions/create_list.js","Components/country-list.jsx","Components/map.jsx","Components/grafic.jsx","Controller/maincontroller.jsx","view/error.jsx","index.js"],"names":["url","a","fetch","then","result","json","error","Error","update","select","ReactDOM","render","View","document","getElementById","chooseColor","type","dataFormater","cases","toString","Grafic","props","useState","dataToShow","setDataToShow","dataToDisplay","setDataToDisplay","newColor","countryUrl","setCountryURL","useEffect","country","setUseState","console","log","Object","keys","map","key","name","Date","toLocaleDateString","month","day","className","data","margin","top","right","left","bottom","dataKey","tickFormatter","stroke","fill","BackButton","link","useHistory","onClick","push","countryPage","to","ViewCountry","date","src","countryInfo","flag","alt","todayCases","todayDeaths","tests","casesPerOneMillion","deathsPerOneMillion","testsPerOneMillion","CreateList","countries","order","sort","country1","country2","list","handleClick","reverse","CountryList","countryList","setCountryList","setNewColor","setOrder","search","setSearch","color","Color","values","join","length","Array","from","searchCountry","style","deaths","recovered","placeholder","value","onChange","event","target","set","newList","filter","toUpperCase","includes","MapView","setCountries","Map","id","center","zoom","minZoom","maxZoom","maxBounds","TileLayer","Circle","lat","long","radius","dataHistorical","MainController","globalData","countriesData","historicalData","NoPage","backgroundColor","setGlobalData","setCountriesData","setHistoricalData","setType","exact","path","component","noPage","Data","catch"],"mappings":"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","file":"static/js/main.99b64a9e.chunk.js","sourcesContent":["export default async function Data(url) {\r\n  return await fetch(url).then(\r\n    (result) => {\r\n      return result.json();\r\n    },\r\n    (error) => {\r\n      throw new Error(error);\r\n    },\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport View from './router';\r\n\r\nexport default function update(select){\r\n    ReactDOM.render(\r\n      <View select={select} />,\r\n      document.getElementById('root')\r\n    );\r\n}","export default function chooseColor(type) {\r\n    \r\n    if (type === \"cases\") {\r\n      return \"blue\";\r\n    } else if (type === \"deaths\") {\r\n      return \"red\";\r\n    } else {\r\n      return \"green\";\r\n    }\r\n  }","export const dataFormater = (cases) => {\r\n    if (cases > 8000000) {\r\n      return (cases / 1000000).toString() + \" M\";\r\n    } else if (cases > 1000) {\r\n      return (cases / 1000).toString() + \" K\";\r\n    } else {\r\n      return cases.toString();\r\n    }\r\n  }","import React, { useState, useEffect } from \"react\";\r\nimport { countryInformation } from \"../Controller/router\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport Color from \"../Functions/color\";\r\nimport { dataFormater } from \"../Functions/data_formater\";\r\nimport \"../Css/grafic.css\";\r\n\r\nexport default function Grafic(props) {\r\n  let [dataToShow, setDataToShow] = useState([]);\r\n  let [dataToDisplay, setDataToDisplay] = useState([]);\r\n  let [newColor, setNewColor] = useState(\"\");\r\n  const [countryUrl, setCountryURL] = useState(\"\");\r\n  \r\n\r\n  useEffect(() => {\r\n    if (!dataToShow) {\r\n      setCountryURL(\"https://disease.sh/v3/covid-19/historical/\" + props.country + \"?lastdays=30\");\r\n      setDataToShow(countryInformation(countryUrl, setDataToShow));\r\n    }\r\nconsole.log(countryUrl)\r\n    console.log(dataToShow)\r\n    if (dataToShow) {\r\n      setDataToDisplay(\r\n        Object.keys(dataToShow).map((key) => {\r\n          const options = { month: \"long\", day: \"numeric\" };\r\n          return {\r\n            name: new Date(key).toLocaleDateString(\"en-US\", options),\r\n            cases: dataToShow[key],\r\n          };\r\n        }),\r\n      );\r\n    }\r\n   // setNewColor(Color(Object.values(props.type).join(\"\")));\r\n    \r\n  }, [props, dataToShow, countryUrl]);\r\n\r\n  return (\r\n    <ResponsiveContainer className=\"grafic\">\r\n      <LineChart\r\n        data={dataToDisplay}\r\n        margin={{\r\n          top: 10,\r\n          right: 30,\r\n          left: 10,\r\n          bottom: 0,\r\n        }}\r\n      >\r\n        <XAxis dataKey=\"name\" />\r\n        <YAxis tickFormatter={dataFormater} />\r\n        <Tooltip />\r\n        <Line type=\"monotone\" dataKey=\"cases\" stroke={newColor} fill={newColor} />\r\n      </LineChart>\r\n    </ResponsiveContainer>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Data from \"../Service/api\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport MainController from \"./maincontroller\";\r\nimport CountryPage from \"../view/country_page\";\r\nimport NoPage from \"../view/error\";\r\n\r\nconst urlAllInfo = \"https://disease.sh/v3/covid-19/all\";\r\nconst urlCountrysAllInfo = \"https://disease.sh/v3/covid-19/countries\";\r\nconst urlHistoricalData = \"https://disease.sh/v3/covid-19/historical/all?lastdays=30\";\r\n\r\nexport default function View(select) {\r\n  const [globalData, setGlobalData] = useState(\"\");\r\n  const [countriesData, setCountriesData] = useState(\"\");\r\n  const [historicalData, setHistoricalData] = useState(\"\");\r\n  let [type, setType] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (globalData.length === 0) {\r\n      setUseState(urlAllInfo, setGlobalData);\r\n      setUseState(urlCountrysAllInfo, setCountriesData);\r\n      setUseState(urlHistoricalData, setHistoricalData);\r\n    }\r\n    setType(Object.values(select));\r\n  }, [select, globalData]);\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"router\">\r\n        <Switch>\r\n          <Route exact path=\"/Covid19website/\">\r\n            <MainController globalData={globalData} countriesData={countriesData} type={type} historicalData={historicalData} />\r\n          </Route>\r\n          <Route path=\"/Portugal\">\r\n            <CountryPage />\r\n          </Route>\r\n          <Route\r\n            component={noPage}\r\n          />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nfunction setUseState(url, set) {\r\n  Data(url).then((result) => {\r\n    set(result);\r\n  }).catch((error) => {\r\n    set(\"Not connect\");\r\n  });\r\n}\r\n\r\nexport function countryInformation(url, set) {\r\n  return setUseState(url, set);\r\n}\r\n\r\nconst noPage = () => {\r\n  return (\r\n    <div>\r\n      <NoPage />\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport update from \"../Controller/update\";\r\n\r\nexport default function BackButton() {\r\n    const link = useHistory();\r\n    return (\r\n        <button\r\n            className=\"rainbow rainbow-1\"\r\n            onClick={() => {\r\n                link.push(\"/Covid19website/\");\r\n                update();\r\n            }}\r\n        >\r\n            Go back\r\n        </button>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router, Redirect } from \"react-router-dom\";\r\nimport Graphic from '../Components/grafic_country_page';\r\nimport BackButton from \"../Functions/backbutton\";\r\nimport \"../Css/country_page.css\";\r\n\r\nexport default function countryPage(country) {\r\n  ReactDOM.render(\r\n    <Router>\r\n      <Redirect to={country.country} />\r\n      <ViewCountry country={country} />\r\n      </Router>,\r\n    document.getElementById('root')\r\n  );\r\n}\r\n\r\nfunction ViewCountry(props) {\r\n  const country = props.country;\r\n  const date = new Date().toLocaleDateString();\r\n\r\n  return (\r\n    <div className=\"countrypage\">\r\n      <div className=\"nameandflag\">\r\n      <h1>{country.country}</h1>\r\n      <img\r\n          src={country.countryInfo.flag}\r\n          className=\"countryflag\"\r\n          alt=\"countryflag\"\r\n        />\r\n      </div>\r\n      <div className=\"totals\">\r\n      <h2>{date}</h2>\r\n      <p>Cases: {country.todayCases}</p>\r\n      <p>Deaths: {country.todayDeaths}</p>\r\n        <p>Tests: {country.tests}</p>\r\n      </div>\r\n      <div className=\"1million\">\r\n      <h3>Per 1 Million</h3>\r\n      <p>Cases: {country.casesPerOneMillion}</p>\r\n      <p>Deaths: {country.deathsPerOneMillion}</p>\r\n        <p>Tests: {country.testsPerOneMillion}</p>\r\n      </div>\r\n      <div className=\"graphic\">\r\n       <Graphic country={country.country} />\r\n        <p>Note: The data above concerns only the past 30 days</p>\r\n      </div>\r\n      <div className=\"backbutton\">\r\n        <BackButton />\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport update from \"../Controller/update\";\r\nimport countryPage from \"../view/country_page\";\r\n\r\nexport default function CreateList(countries, type, order) {\r\n  update(type);\r\n  countries.sort((country1, country2) => {\r\n    return country2[type] - country1[type];\r\n  });\r\n  let list = countries.map((country) => {\r\n    return (\r\n      <div className=\"countrydiv\" key={country.country} onClick={() => { handleClick(country); }}>\r\n        {country[type]} in {country.country}{\" \"}\r\n        <img\r\n          src={country.countryInfo.flag}\r\n          className=\"countryflag\"\r\n          alt=\"countryflag\"\r\n        />\r\n      </div>\r\n    );\r\n  });\r\n  return order ? list : list.reverse();\r\n}\r\n\r\nfunction handleClick(country) {\r\n  countryPage(country);\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\r\nimport CreateList from \"../Functions/create_list\";\r\nimport Color from \"../Functions/color\";\r\nimport { TiArrowSortedUp, TiArrowSortedDown } from \"react-icons/ti\";\r\nimport \"react-tabs/style/react-tabs.css\";\r\nimport \"../Css/country-list.css\";\r\n\r\nexport default function CountryList(props) {\r\n  let [countryList, setCountryList] = useState([]);\r\n  let [newColor, setNewColor] = useState({});\r\n  let [order, setOrder] = useState(true);\r\n  let [search, setSearch] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setNewColor({\r\n      color: Color(Object.values(props.type).join(\"\")),\r\n    });\r\n  }, [props.type]);\r\n\r\n useEffect(() => {\r\n    if (countryList.length === 0) {\r\n      setCountryList(CreateList(Array.from(props.countries), props.type, order));\r\n    }\r\n  }, [props, order, countryList]);\r\n\r\n  return (\r\n    <div className=\"separators\">\r\n      <Tabs key=\"tabs\">\r\n        <TabList key=\"tablist\" className=\"tablist\">\r\n          <Tab\r\n            key=\"cases\"\r\n            onClick={() => {\r\n              searchCountry(\r\n                CreateList(props.countries, \"cases\", order),\r\n                setCountryList,\r\n                search,\r\n              );\r\n            }}\r\n          >\r\n            CASES\r\n          </Tab>\r\n          <Tab\r\n            key=\"deaths\"\r\n            onClick={() => {\r\n              searchCountry(\r\n                CreateList(props.countries, \"deaths\", order),\r\n                setCountryList,\r\n                search,\r\n              );\r\n            }}\r\n          >\r\n            DEATHS\r\n          </Tab>\r\n          <Tab\r\n            key=\"recovered\"\r\n            onClick={() => {\r\n              searchCountry(\r\n                CreateList(props.countries, \"recovered\", order),\r\n                setCountryList,\r\n                search,\r\n              );\r\n            }}\r\n          >\r\n            RECOVERED\r\n          </Tab>\r\n        </TabList>\r\n        <TabPanel style={newColor} key=\"casesview\" className=\"tab\">\r\n          <h2>Total Cases: {props.cases}</h2>\r\n        </TabPanel>\r\n        <TabPanel style={newColor} key=\"deathsview\" className=\"tab\">\r\n          <h2>Total Deaths: {props.deaths}</h2>\r\n        </TabPanel>\r\n        <TabPanel style={newColor} key=\"recoveredview\" className=\"tab\">\r\n          <h2>Total Recovered: {props.recovered}</h2>\r\n        </TabPanel>\r\n      </Tabs>\r\n      <button\r\n        className=\"arrowbutton\"\r\n        onClick={() => {\r\n          setOrder(!order);\r\n          if (countryList === \" \") { return \" \" } else { setCountryList(countryList.reverse()) };\r\n        }}\r\n      >\r\n        {order ? (\r\n          <TiArrowSortedUp className=\"arrow\" />\r\n        ) : (\r\n          <TiArrowSortedDown className=\"arrow\" />\r\n        )}\r\n      </button>\r\n      <input\r\n        className=\"search\"\r\n        type=\"text\"\r\n        placeholder=\"search... \"\r\n        value={search}\r\n        onChange={(event) => {\r\n          searchCountry(\r\n            CreateList(props.countries, props.type, order),\r\n            setCountryList,\r\n            event.target.value\r\n          );\r\n          setSearch(event.target.value);\r\n        }}\r\n      />\r\n      <div className=\"countrylist\">{countryList}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction searchCountry(list, set, search) {\r\n if (search.length === 0) {\r\n    set(list);\r\n  } else {\r\n    let newList = list.filter((value) => {\r\n      return value.key.toUpperCase().includes(search.toUpperCase())\r\n        ? value\r\n        : false;\r\n    });\r\n   if (newList.length > 0) { set(newList); } else { set(\" \") };\r\n }\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Map, TileLayer, Circle } from \"react-leaflet\";\r\nimport Color from \"../Functions/color\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport \"../Css/map.css\";\r\n\r\nexport default function MapView(props) {\r\n  let [countries, setCountries] = useState(\"\");\r\n  let [newColor, setNewColor] = useState(\"\");\r\n  const maxBounds = [[-89.98155760646617, -180], [89.99346179538875, 180]];\r\n  const center = [38.7071, -9.13549];\r\n\r\n  useEffect(() => {\r\n    setCountries(props.countries);\r\n    setNewColor(Color(Object.values(props.type).join(\"\")));\r\n  }, [props]);\r\n\r\n  return (\r\n    <div>\r\n      <Map id=\"mapview\" className=\"mapview\" center={center} zoom={2} minZoom={2} maxZoom={10} maxBounds={maxBounds} >\r\n        <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n        {Array.from(countries).map((country) => {\r\n          return (\r\n            <Circle key={country.country}\r\n              center={[country.countryInfo.lat, country.countryInfo.long]}\r\n              color={newColor}\r\n              radius={country[props.type]}\r\n            />\r\n          );\r\n        })}\r\n      </Map>\r\n    </div>\r\n  );\r\n}\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  AreaChart,\r\n  Area,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport Color from \"../Functions/color\";\r\nimport { dataFormater } from \"../Functions/data_formater\";\r\nimport \"../Css/grafic.css\";\r\n\r\nexport default function Grafic(props) {\r\n  let [dataToShow, setDataToShow] = useState([]);\r\n  let [dataToDisplay, setDataToDisplay] = useState([]);\r\n  let [newColor, setNewColor] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setDataToShow(props.dataHistorical[props.type]);\r\n    if (dataToShow) {\r\n      setDataToDisplay(\r\n        Object.keys(dataToShow).map((key) => {\r\n          const options = { month: \"long\", day: \"numeric\" };\r\n          return {\r\n            name: new Date(key).toLocaleDateString(\"en-US\", options),\r\n            cases: dataToShow[key],\r\n          };\r\n        }),\r\n      );\r\n    }\r\n    setNewColor(Color(Object.values(props.type).join(\"\")));\r\n  }, [props, dataToShow]);\r\n\r\n  return (\r\n    <ResponsiveContainer className=\"grafic\">\r\n      <AreaChart\r\n        data={dataToDisplay}\r\n        margin={{\r\n          top: 10,\r\n          right: 30,\r\n          left: 10,\r\n          bottom: 0,\r\n        }}\r\n      >\r\n        <XAxis dataKey=\"name\" />\r\n        <YAxis tickFormatter={dataFormater} />\r\n        <Tooltip />\r\n        <Area type=\"monotone\" dataKey=\"cases\" stroke={newColor} fill={newColor} />\r\n      </AreaChart>\r\n    </ResponsiveContainer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport CountryList from \"../Components/country-list\";\r\nimport MapView from \"../Components/map\";\r\nimport Grafic from \"../Components/grafic\";\r\nimport \"../Css/maincontroller.css\";\r\n\r\nexport default function MainController(props) {\r\n  return (\r\n    <div className=\"mainbody\" key=\"mainbody\">\r\n      <div className=\"view\" key=\"view\">\r\n        <CountryList\r\n          key=\"countrylist\"\r\n          cases={props.globalData.cases}\r\n          deaths={props.globalData.deaths}\r\n          recovered={props.globalData.recovered}\r\n          countries={props.countriesData}\r\n          type={props.type}\r\n        />\r\n      </div>\r\n      <div className=\"data\">\r\n        <div className=\"mapview\" key=\"mapview\">\r\n          <MapView key=\"mapview\" countries={props.countriesData} type={props.type} />\r\n        </div>\r\n        <div className=\"graficview\" key=\"graficview\">\r\n          <Grafic dataHistorical={props.historicalData} type={props.type} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport \"../Css/error.css\";\r\n\r\nexport default function NoPage() {\r\n  const link = useHistory();\r\n  return (\r\n    <div className=\"nopage\">\r\n      <div className=\"sep\"></div>\r\n      <h1>Page Not Found</h1>\r\n      <h1>Error 404</h1>\r\n      <button\r\n        className=\"returnbutton\"\r\n        style={{ backgroundColor: \"#9a4ef1\" }}\r\n        onClick={() => link.push(\"/Covid19website/\")}\r\n      >\r\n        Return Home\r\n      </button>\r\n      <div className=\"container\">\r\n        <div className=\"loader loader1\"></div>\r\n        <div className=\"loader loader2\"></div>\r\n        <div className=\"loader loader3\"></div>\r\n        <div className=\"loader loader4\"></div>\r\n        <div className=\"loader loader5\"></div>\r\n        <div className=\"loader loader6\"></div>\r\n        <div className=\"loader loader7\"></div>\r\n        <div className=\"loader loader8\"></div>\r\n        <div className=\"loader loader9\"></div>\r\n        <div className=\"loader loader10\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport View from \"./Controller/router\";\r\nimport \"./Css/index.css\";\r\n\r\nReactDOM.render(\r\n    <View select=\"cases\" />,\r\n  document.getElementById(\"root\"),\r\n);\r\n"],"sourceRoot":""}