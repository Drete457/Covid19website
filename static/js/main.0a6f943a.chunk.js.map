{"version":3,"sources":["Service/api.js","Controller/update.jsx","Functions/data_formater.js","Components/grafic_country_page.jsx","Controller/router.jsx","Functions/backbutton.js","view/country_page.jsx","Functions/create_list.js","Functions/color.js","Components/country-list.jsx","Components/map.jsx","Components/grafic.jsx","Controller/maincontroller.jsx","view/error.jsx","index.js"],"names":["url","a","fetch","then","result","json","error","Error","update","select","ReactDOM","render","View","document","getElementById","dataFormater","cases","toString","Grafic","props","useState","dataToShow","setDataToShow","dataToDisplay","setDataToDisplay","countryUrl","setCountryURL","useEffect","country","setUseState","dataToShowFilter","dataPerCase","Object","entries","map","dataReady","keys","date","name","Date","toLocaleDateString","month","day","deaths","recovered","console","log","className","data","margin","top","right","left","bottom","dataKey","tickFormatter","type","stroke","activeDot","r","BackButton","link","useHistory","onClick","push","countryPage","to","ViewCountry","src","countryInfo","flag","alt","todayCases","todayDeaths","tests","casesPerOneMillion","deathsPerOneMillion","testsPerOneMillion","CreateList","countries","order","sort","country1","country2","list","key","event","preventDefault","handleClick","reverse","chooseColor","CountryList","countryList","setCountryList","newColor","setNewColor","setOrder","search","setSearch","color","Color","values","join","length","Array","from","searchCountry","style","placeholder","value","onChange","target","set","newList","filter","toUpperCase","includes","MapView","setCountries","Map","id","center","zoom","minZoom","maxZoom","maxBounds","TileLayer","Circle","lat","long","radius","dataHistorical","fill","MainController","globalData","countriesData","historicalData","NoPage","backgroundColor","setGlobalData","setCountriesData","setHistoricalData","setType","exact","path","component","noPage","Data","catch"],"mappings":"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","file":"static/js/main.0a6f943a.chunk.js","sourcesContent":["export default async function Data(url) {\r\n  return await fetch(url).then(\r\n    (result) => {\r\n      return result.json();\r\n    },\r\n    (error) => {\r\n      throw new Error(error);\r\n    },\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport View from './router';\r\n\r\nexport default function update(select){\r\n    ReactDOM.render(\r\n      <View select={select} />,\r\n      document.getElementById('root')\r\n    );\r\n}","export const dataFormater = (cases) => {\r\n    if (cases > 8000000) {\r\n      return (cases / 1000000).toString() + \" M\";\r\n    } else if (cases > 1000) {\r\n      return (cases / 1000).toString() + \" K\";\r\n    } else {\r\n      return cases.toString();\r\n    }\r\n  }","import React, { useState, useEffect } from \"react\";\r\nimport { countryInformation } from \"../Controller/router\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n  CartesianGrid,\r\n  Legend,\r\n} from \"recharts\";\r\nimport { dataFormater } from \"../Functions/data_formater\";\r\nimport \"../Css/grafic.css\";\r\n\r\nexport default function Grafic(props) {\r\n  let [dataToShow, setDataToShow] = useState({});\r\n  let [dataToDisplay, setDataToDisplay] = useState([]);\r\n  const [countryUrl, setCountryURL] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setCountryURL(\r\n      \"https://disease.sh/v3/covid-19/historical/\" +\r\n        props.country +\r\n        \"?lastdays=30\",\r\n    );\r\n    if (!(\"country\" in dataToShow)) {\r\n      countryInformation(countryUrl, setDataToShow);\r\n    }\r\n    if (\"timeline\" in dataToShow) {\r\n      setCountryURL(\" \");\r\n      const dataToShowFilter = dataToShow[\"timeline\"];\r\n      const dataCases = Object.entries(dataToShowFilter);\r\n      const dataPerCase = dataCases.map((cases) => {\r\n        return cases[1];\r\n      });\r\n      const dataReady = Object.keys(dataPerCase[0]).map((date) => {\r\n        const options = { month: \"long\", day: \"numeric\" };\r\n        return {\r\n          name: new Date(date).toLocaleDateString(\"en-US\", options),\r\n          cases: dataPerCase[0][date],\r\n          deaths: dataPerCase[1][date],\r\n          recovered: dataPerCase[2][date],\r\n        };\r\n      });\r\n\r\n      setDataToDisplay(dataReady);\r\n    }\r\n  }, [props, dataToShow, countryUrl]);\r\nconsole.log(dataToDisplay)\r\n  return (\r\n    <ResponsiveContainer className=\"graficviewcountry\">\r\n    <LineChart\r\n    data={dataToDisplay}\r\n    margin={{\r\n      top: 10,\r\n      right: 30,\r\n      left: 10,\r\n      bottom: 0,\r\n    }}\r\n  >\r\n    \r\n    <XAxis dataKey=\"name\" />\r\n    <YAxis tickFormatter={dataFormater} />\r\n    <Tooltip />\r\n    <Legend />\r\n    <Line type=\"monotone\" dataKey=\"cases\" stroke=\"#82ca9d\" />\r\n    <Line type=\"monotone\" dataKey=\"deaths\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\r\n    <Line type=\"monotone\" dataKey=\"recovered\" stroke=\"#8880d8\" activeDot={{ r: 8 }} />\r\n  </LineChart>\r\n  </ResponsiveContainer>\r\n  );\r\n}\r\n/*   <ResponsiveContainer className=\"grafic\">\r\n      <LineChart\r\n        data={dataToDisplay}\r\n        margin={{\r\n          top: 10,\r\n          right: 30,\r\n          left: 10,\r\n          bottom: 0,\r\n        }}\r\n      >\r\n        <XAxis dataKey=\"name\" />\r\n        <YAxis tickFormatter={dataFormater} />\r\n        <Tooltip />\r\n        <Line type=\"monotone\" dataKey=\"cases\" stroke=\"red\" fill=\"red\" />\r\n      </LineChart>\r\n    </ResponsiveContainer>*/\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Data from \"../Service/api\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport MainController from \"./maincontroller\";\r\nimport CountryPage from \"../view/country_page\";\r\nimport NoPage from \"../view/error\";\r\n\r\nconst urlAllInfo = \"https://disease.sh/v3/covid-19/all\";\r\nconst urlCountrysAllInfo = \"https://disease.sh/v3/covid-19/countries\";\r\nconst urlHistoricalData =\r\n  \"https://disease.sh/v3/covid-19/historical/all?lastdays=30\";\r\n\r\nexport default function View(select) {\r\n  const [globalData, setGlobalData] = useState(\"\");\r\n  const [countriesData, setCountriesData] = useState(\"\");\r\n  const [historicalData, setHistoricalData] = useState(\"\");\r\n  let [type, setType] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (globalData.length === 0) {\r\n      setUseState(urlAllInfo, setGlobalData);\r\n      setUseState(urlCountrysAllInfo, setCountriesData);\r\n      setUseState(urlHistoricalData, setHistoricalData);\r\n    }\r\n    setType(Object.values(select));\r\n  }, [select, globalData]);\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"router\">\r\n        <Switch>\r\n          <Route exact path=\"/Covid19website/\">\r\n            <MainController\r\n              globalData={globalData}\r\n              countriesData={countriesData}\r\n              type={type}\r\n              historicalData={historicalData}\r\n            />\r\n          </Route>\r\n          <Route path=\"/Portugal\">\r\n            <CountryPage />\r\n          </Route>\r\n          <Route component={noPage} />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nfunction setUseState(url, set) {\r\n  Data(url)\r\n    .then((result) => {\r\n      set(result);\r\n    })\r\n    .catch((error) => {\r\n      set(error);\r\n    });\r\n}\r\n\r\nexport function countryInformation(url, set) {\r\n  setUseState(url, set);\r\n}\r\n\r\nconst noPage = () => {\r\n  return (\r\n    <div>\r\n      <NoPage />\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport update from \"../Controller/update\";\r\n\r\nexport default function BackButton() {\r\n    const link = useHistory();\r\n    return (\r\n        <button\r\n            className=\"rainbow rainbow-1\"\r\n            onClick={() => {\r\n                link.push(\"/Covid19website/\");\r\n                update();\r\n            }}\r\n        >\r\n            Go back\r\n        </button>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router, Redirect } from \"react-router-dom\";\r\nimport Graphic from '../Components/grafic_country_page';\r\nimport BackButton from \"../Functions/backbutton\";\r\nimport \"../Css/country_page.css\";\r\n\r\nexport default function countryPage(country) {\r\n  ReactDOM.render(\r\n    <Router>\r\n      <Redirect to={country.country} />\r\n      <ViewCountry country={country} />\r\n      </Router>,\r\n    document.getElementById('root')\r\n  );\r\n}\r\n\r\nfunction ViewCountry(props) {\r\n  const country = props.country;\r\n  const date = new Date().toLocaleDateString();\r\n\r\n  return (\r\n    <div className=\"countrypage\">\r\n      <div className=\"nameandflag\">\r\n      <h1>{country.country}</h1>\r\n      <img\r\n          src={country.countryInfo.flag}\r\n          className=\"countryflag\"\r\n          alt=\"countryflag\"\r\n        />\r\n      </div>\r\n      <div className=\"totals\">\r\n      <h2>{date}</h2>\r\n      <p>Cases: {country.todayCases}</p>\r\n      <p>Deaths: {country.todayDeaths}</p>\r\n        <p>Tests: {country.tests}</p>\r\n      </div>\r\n      <div className=\"1million\">\r\n      <h3>Per 1 Million</h3>\r\n      <p>Cases: {country.casesPerOneMillion}</p>\r\n      <p>Deaths: {country.deathsPerOneMillion}</p>\r\n        <p>Tests: {country.testsPerOneMillion}</p>\r\n      </div>\r\n      <div className=\"grafic\">\r\n       <Graphic country={country.country} />\r\n        <p>Note: The data above concerns only the past 30 days</p>\r\n      </div>\r\n      <div className=\"backbutton\">\r\n        <BackButton />\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport update from \"../Controller/update\";\r\nimport countryPage from \"../view/country_page\";\r\n\r\nexport default function CreateList(countries, type, order) {\r\n  update(type);\r\n  countries.sort((country1, country2) => {\r\n    return country2[type] - country1[type];\r\n  });\r\n  let list = countries.map((country) => {\r\n    return (\r\n      <div className=\"countrydiv\" key={country.country} onClick={(event) => {\r\n        event.preventDefault();\r\n        handleClick(country);\r\n      }}>\r\n        {country[type]} in {country.country}{\" \"}\r\n        <img\r\n          src={country.countryInfo.flag}\r\n          className=\"countryflag\"\r\n          alt=\"countryflag\"\r\n        />\r\n      </div>\r\n    );\r\n  });\r\n  return order ? list : list.reverse();\r\n}\r\n\r\nfunction handleClick(country) {\r\n  countryPage(country);\r\n}\r\n","export default function chooseColor(type) {\r\n    \r\n    if (type === \"cases\") {\r\n      return \"blue\";\r\n    } else if (type === \"deaths\") {\r\n      return \"red\";\r\n    } else {\r\n      return \"green\";\r\n    }\r\n  }","import React, { useState, useEffect } from \"react\";\r\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\r\nimport CreateList from \"../Functions/create_list\";\r\nimport Color from \"../Functions/color\";\r\nimport { TiArrowSortedUp, TiArrowSortedDown } from \"react-icons/ti\";\r\nimport \"react-tabs/style/react-tabs.css\";\r\nimport \"../Css/country-list.css\";\r\n\r\nexport default function CountryList(props) {\r\n  let [countryList, setCountryList] = useState([]);\r\n  let [newColor, setNewColor] = useState({});\r\n  let [order, setOrder] = useState(true);\r\n  let [search, setSearch] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setNewColor({\r\n      color: Color(Object.values(props.type).join(\"\")),\r\n    });\r\n  }, [props.type]);\r\n\r\n useEffect(() => {\r\n    if (countryList.length === 0) {\r\n      setCountryList(CreateList(Array.from(props.countries), props.type, order));\r\n    }\r\n  }, [props, order, countryList]);\r\n\r\n  return (\r\n    <div className=\"separators\">\r\n      <Tabs key=\"tabs\">\r\n        <TabList key=\"tablist\" className=\"tablist\">\r\n          <Tab\r\n            key=\"cases\"\r\n            onClick={() => {\r\n              searchCountry(\r\n                CreateList(props.countries, \"cases\", order),\r\n                setCountryList,\r\n                search,\r\n              );\r\n            }}\r\n          >\r\n            CASES\r\n          </Tab>\r\n          <Tab\r\n            key=\"deaths\"\r\n            onClick={() => {\r\n              searchCountry(\r\n                CreateList(props.countries, \"deaths\", order),\r\n                setCountryList,\r\n                search,\r\n              );\r\n            }}\r\n          >\r\n            DEATHS\r\n          </Tab>\r\n          <Tab\r\n            key=\"recovered\"\r\n            onClick={() => {\r\n              searchCountry(\r\n                CreateList(props.countries, \"recovered\", order),\r\n                setCountryList,\r\n                search,\r\n              );\r\n            }}\r\n          >\r\n            RECOVERED\r\n          </Tab>\r\n        </TabList>\r\n        <TabPanel style={newColor} key=\"casesview\" className=\"tab\">\r\n          <h2>Total Cases: {props.cases}</h2>\r\n        </TabPanel>\r\n        <TabPanel style={newColor} key=\"deathsview\" className=\"tab\">\r\n          <h2>Total Deaths: {props.deaths}</h2>\r\n        </TabPanel>\r\n        <TabPanel style={newColor} key=\"recoveredview\" className=\"tab\">\r\n          <h2>Total Recovered: {props.recovered}</h2>\r\n        </TabPanel>\r\n      </Tabs>\r\n      <button\r\n        className=\"arrowbutton\"\r\n        onClick={() => {\r\n          setOrder(!order);\r\n          if (countryList === \" \") { return \" \" } else { setCountryList(countryList.reverse()) };\r\n        }}\r\n      >\r\n        {order ? (\r\n          <TiArrowSortedUp className=\"arrow\" />\r\n        ) : (\r\n          <TiArrowSortedDown className=\"arrow\" />\r\n        )}\r\n      </button>\r\n      <input\r\n        className=\"search\"\r\n        type=\"text\"\r\n        placeholder=\"search... \"\r\n        value={search}\r\n        onChange={(event) => {\r\n          searchCountry(\r\n            CreateList(props.countries, props.type, order),\r\n            setCountryList,\r\n            event.target.value\r\n          );\r\n          setSearch(event.target.value);\r\n        }}\r\n      />\r\n      <div className=\"countrylist\">{countryList}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction searchCountry(list, set, search) {\r\n if (search.length === 0) {\r\n    set(list);\r\n  } else {\r\n    let newList = list.filter((value) => {\r\n      return value.key.toUpperCase().includes(search.toUpperCase())\r\n        ? value\r\n        : false;\r\n    });\r\n   if (newList.length > 0) { set(newList); } else { set(\" \") };\r\n }\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Map, TileLayer, Circle } from \"react-leaflet\";\r\nimport Color from \"../Functions/color\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport \"../Css/map.css\";\r\n\r\nexport default function MapView(props) {\r\n  let [countries, setCountries] = useState(\"\");\r\n  let [newColor, setNewColor] = useState(\"\");\r\n  const maxBounds = [[-89.98155760646617, -180], [89.99346179538875, 180]];\r\n  const center = [38.7071, -9.13549];\r\n\r\n  useEffect(() => {\r\n    setCountries(props.countries);\r\n    setNewColor(Color(Object.values(props.type).join(\"\")));\r\n  }, [props]);\r\n\r\n  return (\r\n    <div>\r\n      <Map id=\"mapview\" className=\"mapview\" center={center} zoom={2} minZoom={2} maxZoom={10} maxBounds={maxBounds} >\r\n        <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n        {Array.from(countries).map((country) => {\r\n          return (\r\n            <Circle key={country.country}\r\n              center={[country.countryInfo.lat, country.countryInfo.long]}\r\n              color={newColor}\r\n              radius={country[props.type]}\r\n            />\r\n          );\r\n        })}\r\n      </Map>\r\n    </div>\r\n  );\r\n}\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  AreaChart,\r\n  Area,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport Color from \"../Functions/color\";\r\nimport { dataFormater } from \"../Functions/data_formater\";\r\nimport \"../Css/grafic.css\";\r\n\r\nexport default function Grafic(props) {\r\n  let [dataToShow, setDataToShow] = useState([]);\r\n  let [dataToDisplay, setDataToDisplay] = useState([]);\r\n  let [newColor, setNewColor] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setDataToShow(props.dataHistorical[props.type]);\r\n    if (dataToShow) {\r\n      setDataToDisplay(\r\n        Object.keys(dataToShow).map((key) => {\r\n          const options = { month: \"long\", day: \"numeric\" };\r\n          return {\r\n            name: new Date(key).toLocaleDateString(\"en-US\", options),\r\n            cases: dataToShow[key],\r\n          };\r\n        }),\r\n      );\r\n    }\r\n    setNewColor(Color(Object.values(props.type).join(\"\")));\r\n  }, [props, dataToShow]);\r\n\r\n  return (\r\n    <ResponsiveContainer className=\"grafic\">\r\n      <AreaChart\r\n        data={dataToDisplay}\r\n        margin={{\r\n          top: 10,\r\n          right: 30,\r\n          left: 10,\r\n          bottom: 0,\r\n        }}\r\n      >\r\n        <XAxis dataKey=\"name\" />\r\n        <YAxis tickFormatter={dataFormater} />\r\n        <Tooltip />\r\n        <Area type=\"monotone\" dataKey=\"cases\" stroke={newColor} fill={newColor} />\r\n      </AreaChart>\r\n    </ResponsiveContainer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport CountryList from \"../Components/country-list\";\r\nimport MapView from \"../Components/map\";\r\nimport Grafic from \"../Components/grafic\";\r\nimport \"../Css/maincontroller.css\";\r\n\r\nexport default function MainController(props) {\r\n  return (\r\n    <div className=\"mainbody\" key=\"mainbody\">\r\n      <div className=\"view\" key=\"view\">\r\n        <CountryList\r\n          key=\"countrylist\"\r\n          cases={props.globalData.cases}\r\n          deaths={props.globalData.deaths}\r\n          recovered={props.globalData.recovered}\r\n          countries={props.countriesData}\r\n          type={props.type}\r\n        />\r\n      </div>\r\n      <div className=\"data\">\r\n        <div className=\"mapview\" key=\"mapview\">\r\n          <MapView key=\"mapview\" countries={props.countriesData} type={props.type} />\r\n        </div>\r\n        <div className=\"graficview\" key=\"graficview\">\r\n          <Grafic dataHistorical={props.historicalData} type={props.type} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport \"../Css/error.css\";\r\n\r\nexport default function NoPage() {\r\n  const link = useHistory();\r\n  return (\r\n    <div className=\"nopage\">\r\n      <div className=\"sep\"></div>\r\n      <h1>Page Not Found</h1>\r\n      <h1>Error 404</h1>\r\n      <button\r\n        className=\"returnbutton\"\r\n        style={{ backgroundColor: \"#9a4ef1\" }}\r\n        onClick={() => link.push(\"/Covid19website/\")}\r\n      >\r\n        Return Home\r\n      </button>\r\n      <div className=\"container\">\r\n        <div className=\"loader loader1\"></div>\r\n        <div className=\"loader loader2\"></div>\r\n        <div className=\"loader loader3\"></div>\r\n        <div className=\"loader loader4\"></div>\r\n        <div className=\"loader loader5\"></div>\r\n        <div className=\"loader loader6\"></div>\r\n        <div className=\"loader loader7\"></div>\r\n        <div className=\"loader loader8\"></div>\r\n        <div className=\"loader loader9\"></div>\r\n        <div className=\"loader loader10\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport View from \"./Controller/router\";\r\nimport \"./Css/index.css\";\r\n\r\nReactDOM.render(\r\n    <View select=\"cases\" />,\r\n  document.getElementById(\"root\"),\r\n);\r\n"],"sourceRoot":""}