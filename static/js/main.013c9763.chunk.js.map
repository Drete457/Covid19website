{"version":3,"sources":["Service/api.js","Controller/update.jsx","Functions/backbutton.js","view/country_page.jsx","Functions/create_list.js","Functions/color.js","Components/country-list.jsx","Components/map.jsx","Functions/data_formater.js","Components/grafic.jsx","Controller/maincontroller.jsx","view/error.jsx","Controller/router.jsx","index.js"],"names":["url","a","fetch","then","result","json","error","Error","update","select","ReactDOM","render","View","document","getElementById","BackButton","link","useHistory","className","onClick","push","countryPage","country","console","log","to","ViewCountry","CreateList","countries","type","order","sort","country1","country2","list","map","key","handleClick","src","countryInfo","flag","alt","reverse","chooseColor","CountryList","props","useState","countryList","setCountryList","newColor","setNewColor","setOrder","search","setSearch","useEffect","color","Color","Object","values","join","length","Array","from","searchCountry","style","cases","deaths","recovered","placeholder","value","onChange","event","target","set","newList","filter","toUpperCase","includes","MapView","setCountries","Map","id","center","zoom","minZoom","maxZoom","maxBounds","TileLayer","index","Circle","lat","long","radius","dataFormater","toString","Grafic","dataToShow","setDataToShow","dataToDisplay","setDataToDisplay","dataHistorical","keys","name","Date","toLocaleDateString","month","day","data","margin","top","right","left","bottom","dataKey","tickFormatter","stroke","fill","MainController","globalData","countriesData","historicalData","NoPage","backgroundColor","setGlobalData","setCountriesData","setHistoricalData","setType","setUseState","exact","path","component","noPage","Data","catch"],"mappings":"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","file":"static/js/main.013c9763.chunk.js","sourcesContent":["export default async function Data(url) {\r\n  return await fetch(url).then(\r\n    (result) => {\r\n      return result.json();\r\n    },\r\n    (error) => {\r\n      throw new Error(error);\r\n    },\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport View from './router';\r\n\r\nexport default function update(select){\r\n    ReactDOM.render(\r\n      <View select={select} />,\r\n      document.getElementById('root')\r\n    );\r\n}","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport update from \"../Controller/update\";\r\n\r\nexport default function BackButton() {\r\n    const link = useHistory();\r\n    return (\r\n        <button\r\n            className=\"backbutton\"\r\n            onClick={() => {\r\n                link.push(\"/\");\r\n                update();\r\n            }}\r\n        >\r\n            Go back\r\n        </button>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport BackButton from \"../Functions/backbutton\";\r\nimport { BrowserRouter as Router, Redirect } from \"react-router-dom\";\r\nimport \"../Css/country_page.css\";\r\n\r\nexport default function countryPage(country) {\r\n  console.log(\"page: \" + country)\r\n  ReactDOM.render(\r\n    <Router>\r\n      <Redirect to={country.country} />\r\n      <ViewCountry country={country} />\r\n      </Router>,\r\n    document.getElementById('root')\r\n  );\r\n}\r\n\r\nfunction ViewCountry(country) {\r\n  console.log(country)\r\n  return (\r\n    <div className=\"countrypage\">\r\n        <h1>Teste</h1>\r\n      <BackButton />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport update from \"../Controller/update\";\r\nimport countryPage from \"../view/country_page\";\r\n\r\nexport default function CreateList(countries, type, order) {\r\n  update(type);\r\n  countries.sort((country1, country2) => {\r\n    return country2[type] - country1[type];\r\n  });\r\n  let list = countries.map((country) => {\r\n    return (\r\n      <div className=\"countrydiv\" key={country.country} onClick={() => { handleClick(country); }}>\r\n        {country[type]} in {country.country}{\" \"}\r\n        <img\r\n          src={country.countryInfo.flag}\r\n          className=\"countryflag\"\r\n          alt=\"countryflag\"\r\n        />\r\n      </div>\r\n    );\r\n  });\r\n  return order ? list : list.reverse();\r\n}\r\n\r\nfunction handleClick(country) {\r\n  console.log(\"was clicked\");\r\n  countryPage(country);\r\n}\r\n","export default function chooseColor(type) {\r\n    \r\n    if (type === \"cases\") {\r\n      return \"blue\";\r\n    } else if (type === \"deaths\") {\r\n      return \"red\";\r\n    } else {\r\n      return \"green\";\r\n    }\r\n  }","import React, { useState, useEffect } from \"react\";\r\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\r\nimport CreateList from \"../Functions/create_list\";\r\nimport Color from \"../Functions/color\";\r\nimport { TiArrowSortedUp, TiArrowSortedDown } from \"react-icons/ti\";\r\nimport \"react-tabs/style/react-tabs.css\";\r\nimport \"../Css/country-list.css\";\r\n\r\nexport default function CountryList(props) {\r\n  let [countryList, setCountryList] = useState([]);\r\n  let [newColor, setNewColor] = useState({});\r\n  let [order, setOrder] = useState(true);\r\n  let [search, setSearch] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setNewColor({\r\n      color: Color(Object.values(props.type).join(\"\")),\r\n    });\r\n  }, [props.type]);\r\n\r\n useEffect(() => {\r\n    if (countryList.length === 0) {\r\n      setCountryList(CreateList(Array.from(props.countries), props.type, order));\r\n    }\r\n  }, [props, order, countryList]);\r\n\r\n  return (\r\n    <div className=\"separators\">\r\n      <Tabs key=\"tabs\">\r\n        <TabList key=\"tablist\" className=\"tablist\">\r\n          <Tab\r\n            key=\"cases\"\r\n            onClick={() => {\r\n              searchCountry(\r\n                CreateList(props.countries, \"cases\", order),\r\n                setCountryList,\r\n                search,\r\n              );\r\n            }}\r\n          >\r\n            CASES\r\n          </Tab>\r\n          <Tab\r\n            key=\"deaths\"\r\n            onClick={() => {\r\n              searchCountry(\r\n                CreateList(props.countries, \"deaths\", order),\r\n                setCountryList,\r\n                search,\r\n              );\r\n            }}\r\n          >\r\n            DEATHS\r\n          </Tab>\r\n          <Tab\r\n            key=\"recovered\"\r\n            onClick={() => {\r\n              searchCountry(\r\n                CreateList(props.countries, \"recovered\", order),\r\n                setCountryList,\r\n                search,\r\n              );\r\n            }}\r\n          >\r\n            RECOVERED\r\n          </Tab>\r\n        </TabList>\r\n        <TabPanel style={newColor} key=\"casesview\" className=\"tab\">\r\n          <h2>Total Cases: {props.cases}</h2>\r\n        </TabPanel>\r\n        <TabPanel style={newColor} key=\"deathsview\" className=\"tab\">\r\n          <h2>Total Deaths: {props.deaths}</h2>\r\n        </TabPanel>\r\n        <TabPanel style={newColor} key=\"recoveredview\" className=\"tab\">\r\n          <h2>Total Recovered: {props.recovered}</h2>\r\n        </TabPanel>\r\n      </Tabs>\r\n      <button\r\n        className=\"arrowbutton\"\r\n        onClick={() => {\r\n          setOrder(!order);\r\n          if (countryList === \" \") { return \" \" } else { setCountryList(countryList.reverse()) };\r\n        }}\r\n      >\r\n        {order ? (\r\n          <TiArrowSortedUp className=\"arrow\" />\r\n        ) : (\r\n          <TiArrowSortedDown className=\"arrow\" />\r\n        )}\r\n      </button>\r\n      <input\r\n        className=\"search\"\r\n        type=\"text\"\r\n        placeholder=\"search... \"\r\n        value={search}\r\n        onChange={(event) => {\r\n          searchCountry(\r\n            CreateList(props.countries, props.type, order),\r\n            setCountryList,\r\n            event.target.value\r\n          );\r\n          setSearch(event.target.value);\r\n        }}\r\n      />\r\n      <div className=\"countrylist\">{countryList}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction searchCountry(list, set, search) {\r\n if (search.length === 0) {\r\n    set(list);\r\n  } else {\r\n    let newList = list.filter((value) => {\r\n      return value.key.toUpperCase().includes(search.toUpperCase())\r\n        ? value\r\n        : false;\r\n    });\r\n   if (newList.length > 0) { set(newList); } else { set(\" \") };\r\n }\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Map, TileLayer, Circle } from \"react-leaflet\";\r\nimport Color from \"../Functions/color\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport \"../Css/map.css\";\r\n\r\nexport default function MapView(props) {\r\n  let [countries, setCountries] = useState(\"\");\r\n  let [newColor, setNewColor] = useState(\"\");\r\n  const maxBounds = [[-89.98155760646617, -180], [89.99346179538875, 180]];\r\n  const center = [38.7071, -9.13549];\r\n\r\n  useEffect(() => {\r\n    setCountries(props.countries);\r\n    setNewColor(Color(Object.values(props.type).join(\"\")));\r\n  }, [props]);\r\n\r\n  return (\r\n    <div>\r\n      <Map id=\"mapview\" className=\"mapview\" center={center} zoom={2} minZoom={2} maxZoom={18} maxBounds={maxBounds} >\r\n        <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}{y}.png\" />\r\n        {Array.from(countries).map((country, index) => {\r\n          return (\r\n            <Circle key={index}\r\n              center={[country.countryInfo.lat, country.countryInfo.long]}\r\n              color={newColor}\r\n              radius={country[props.type]}\r\n            />\r\n          );\r\n        })}\r\n      </Map>\r\n    </div>\r\n  );\r\n}\r\n\r\n","export const dataFormater = (cases) => {\r\n    if (cases > 8000000) {\r\n      return (cases / 1000000).toString() + \" M\";\r\n    } else if (cases > 1000) {\r\n      return (cases / 1000).toString() + \" K\";\r\n    } else {\r\n      return cases.toString();\r\n    }\r\n  }","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  AreaChart,\r\n  Area,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport Color from \"../Functions/color\";\r\nimport { dataFormater } from \"../Functions/data_formater\";\r\nimport \"../Css/grafic.css\";\r\n\r\nexport default function Grafic(props) {\r\n  let [dataToShow, setDataToShow] = useState([]);\r\n  let [dataToDisplay, setDataToDisplay] = useState([]);\r\n  let [newColor, setNewColor] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setDataToShow(props.dataHistorical[props.type]);\r\n    if (dataToShow) {\r\n      setDataToDisplay(\r\n        Object.keys(dataToShow).map((key) => {\r\n          const options = { month: \"long\", day: \"numeric\" };\r\n          return {\r\n            name: new Date(key).toLocaleDateString(\"en-US\", options),\r\n            cases: dataToShow[key],\r\n          };\r\n        }),\r\n      );\r\n    }\r\n    setNewColor(Color(Object.values(props.type).join(\"\")));\r\n  }, [props, dataToShow]);\r\n\r\n  return (\r\n    <ResponsiveContainer className=\"grafic\">\r\n      <AreaChart\r\n        data={dataToDisplay}\r\n        margin={{\r\n          top: 10,\r\n          right: 30,\r\n          left: 10,\r\n          bottom: 0,\r\n        }}\r\n      >\r\n        <XAxis dataKey=\"name\" />\r\n        <YAxis tickFormatter={dataFormater} />\r\n        <Tooltip />\r\n        <Area type=\"monotone\" dataKey=\"cases\" stroke={newColor} fill={newColor} />\r\n      </AreaChart>\r\n    </ResponsiveContainer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport CountryList from \"../Components/country-list\";\r\nimport MapView from \"../Components/map\";\r\nimport Grafic from \"../Components/grafic\";\r\nimport \"../Css/maincontroller.css\";\r\n\r\nexport default function MainController(props) {\r\n  return (\r\n    <div className=\"mainbody\" key=\"mainbody\">\r\n      <div className=\"view\" key=\"view\">\r\n        <CountryList\r\n          key=\"countrylist\"\r\n          cases={props.globalData.cases}\r\n          deaths={props.globalData.deaths}\r\n          recovered={props.globalData.recovered}\r\n          countries={props.countriesData}\r\n          type={props.type}\r\n        />\r\n      </div>\r\n      <div className=\"data\">\r\n        <div className=\"mapview\" key=\"mapview\">\r\n          <MapView key=\"mapview\" countries={props.countriesData} type={props.type} />\r\n        </div>\r\n        <div className=\"graficview\" key=\"graficview\">\r\n          <Grafic dataHistorical={props.historicalData} type={props.type} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport \"../Css/error.css\";\r\n\r\nexport default function NoPage() {\r\n  const link = useHistory();\r\n  return (\r\n    <div className=\"nopage\">\r\n      <div className=\"sep\"></div>\r\n      <h1>Page Not Found</h1>\r\n      <h1>Error 404</h1>\r\n      <button\r\n        className=\"returnbutton\"\r\n        style={{ backgroundColor: \"#9a4ef1\" }}\r\n        onClick={() => link.push(\"/\")}\r\n      >\r\n        Return Home\r\n      </button>\r\n      <div className=\"container\">\r\n        <div className=\"loader loader1\"></div>\r\n        <div className=\"loader loader2\"></div>\r\n        <div className=\"loader loader3\"></div>\r\n        <div className=\"loader loader4\"></div>\r\n        <div className=\"loader loader5\"></div>\r\n        <div className=\"loader loader6\"></div>\r\n        <div className=\"loader loader7\"></div>\r\n        <div className=\"loader loader8\"></div>\r\n        <div className=\"loader loader9\"></div>\r\n        <div className=\"loader loader10\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Data from \"../Service/api\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport MainController from \"./maincontroller\";\r\nimport CountryPage from \"../view/country_page\";\r\nimport NoPage from \"../view/error\";\r\n\r\nconst urlAllInfo = \"https://disease.sh/v2/all\";\r\nconst urlCountrysAllInfo = \"https://disease.sh/v2/countries\";\r\nconst urlHistoricalData = \"https://disease.sh/v2/historical/all?lastdays=30\";\r\n\r\nexport default function View(select) {\r\n  const [globalData, setGlobalData] = useState(\"\");\r\n  const [countriesData, setCountriesData] = useState(\"\");\r\n  const [historicalData, setHistoricalData] = useState(\"\");\r\n  let [type, setType] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (globalData.length === 0) {\r\n      setUseState(urlAllInfo, setGlobalData);\r\n      setUseState(urlCountrysAllInfo, setCountriesData);\r\n      setUseState(urlHistoricalData, setHistoricalData);\r\n    }\r\n    setType(Object.values(select));\r\n  }, [select, globalData]);\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"router\">\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <MainController globalData={globalData} countriesData={countriesData} type={type} historicalData={historicalData} />\r\n          </Route>\r\n          <Route path=\"/Portugal\">\r\n            <CountryPage />\r\n          </Route>\r\n          <Route\r\n            component={noPage}\r\n          />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nfunction setUseState(url, set) {\r\n  Data(url).then((result) => {\r\n    set(result);\r\n  }).catch((error) => {\r\n    set(\"Not connect\");\r\n  });\r\n}\r\n\r\nconst noPage = () => {\r\n  return (\r\n    <div>\r\n      <NoPage />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport View from \"./Controller/router\";\r\nimport \"./Css/index.css\";\r\n\r\nReactDOM.render(\r\n    <View select=\"cases\" />,\r\n  document.getElementById(\"root\"),\r\n);\r\n"],"sourceRoot":""}